Version: 1.5 # minimal SMASH version to use with this config file

Logging:
    default: INFO

General:
    Modus:          Collider
    Time_Step_Mode: Fixed
    Delta_Time:     0.01
    End_Time:       100.0
    Randomseed:     415159
    Nevents:        100
    Gaussian_Sigma: 1.0
    Gauss_Cutoff_In_Sigma: 4.0
    Use_Grid: True

Output:
    Output_Interval: 10.0
    Density_Type: "baryon"
    Particles:
        Format:     ["Root"]
        Extended:   True
        Only_Final: True
#    Collisions:
#        Format:     ["Root"]
#        Extended:   True
#        Print_Start_End: True

Modi:
    Collider:
        Projectile:
            Particles: {2212: 79, 2112: 118} #Gold197
        Target:
            Particles: {2212: 79, 2112: 118} #Gold197
        Impact:
            Sample: "quadratic"
            Range:  [0.0, 18.0]    #[0.0, 14.0] 

        Sqrtsnn: 7.7
        Fermi_Motion: "on"	#frozen / on ? then delta_time 0.01 for Snn=5

Potentials:
    Skyrme:
        Skyrme_A: -356.0
        Skyrme_B: 303.0
        Skyrme_Tau: 1.17
    Symmetry:
        S_Pot: 18.0
#default
#           a [MeV]   b [MeV]     t    S_pot [MeV]
#
#default    -209.2    156.4     1.35    18
#
#soft       -356.0    303.0     1.17    18
#
#hard       -124.0    71.0      2.0     18
input_line_8:1:2911: error: redefinition of 'MixMaxEngine' as different kind of symbol
/cvmfs/it.gsi.de/root/v6-06-06/include/root/Math/MixMaxEngine.h:55:13: note: previous definition is here
      class MixMaxEngine : public TRandomEngine {
            ^
input_line_8:1:3377: error: too many template parameters in template redeclaration
/cvmfs/it.gsi.de/root/v6-06-06/include/root/Fit/BasicFCN.h:42:1: note: previous template declaration is here
template<class FunType, class DataType>
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
input_line_8:1:3555: error: too many template parameters in template redeclaration
/cvmfs/it.gsi.de/root/v6-06-06/include/root/Fit/Chi2FCN.h:65:1: note: previous template declaration is here
template<class FunType>
^~~~~~~~~~~~~~~~~~~~~~~
input_line_8:1:3662: error: too many template parameters in template redeclaration
/cvmfs/it.gsi.de/root/v6-06-06/include/root/Fit/LogLikelihoodFCN.h:54:1: note: previous template declaration is here
template<class FunType>
^~~~~~~~~~~~~~~~~~~~~~~
input_line_8:1:3778: error: too many template parameters in template redeclaration
/cvmfs/it.gsi.de/root/v6-06-06/include/root/Fit/PoissonLikelihoodFCN.h:55:1: note: previous template declaration is here
template<class FunType>
^~~~~~~~~~~~~~~~~~~~~~~
Warning in <TInterpreter::LoadLibraryMap>: Problems in (null) declaring 'namespace std {  }namespace ROOT { namespace Math {  } }namespace ROOT { namespace Math { template <typename T, unsigned int, unsigned int> class MatRepStd; } }namespace ROOT { namespace Math { template <typename T, unsigned int> class MatRepSym; } }namespace ROOT { namespace Math { template <typename T, unsigned int> class SVector; } }namespace ROOT { namespace Math { template <typename T, unsigned int, unsigned int, typename R> class SMatrix; } }template <typename Element> class TMatrixTBase;template <typename Element> class TVectorT;template <typename Element> class TMatrixT;template <typename Element> class TMatrixTSym;template <typename Element> class TMatrixTSparse;template <typename Element> class TMatrixTRow_const;template <typename Element> class TMatrixTRow;template <typename Element> class TMatrixTColumn_const;template <typename Element> class TMatrixTColumn;template <typename Element> class TMatrixTDiag_const;template <typename Element> class TMatrixTDiag;template <typename Element> class TMatrixTFlat_const;template <typename Element> class TMatrixTFlat;template <typename Element> class TMatrixTSub_const;template <typename Element> class TMatrixTSub;template <typename Element> class TMatrixTSparseRow_const;template <typename Element> class TMatrixTSparseRow;template <typename Element> class TMatrixTSparseDiag_const;template <typename Element> class TMatrixTSparseDiag;template <typename Element> class TMatrixTLazy;template <typename Element> class TMatrixTSymLazy;template <typename Element> class THaarMatrixT;template <typename Element> class THilbertMatrixT;template <typename Element> class THilbertMatrixTSym;namespace TMVA {  }namespace TMVA { namespace kNN {  } }namespace TMVA { namespace Experimental {  } }namespace ROOT { namespace Math { namespace IntegrationOneDim {  } } }namespace __gnu_cxx {  }namespace __gnu_cxx { template <typename _Iterator, typename _Container> class __normal_iterator; }template <typename Index, typename Value> class TKDTree;namespace ROOT { namespace Math { template <typename T> class IBaseFunctionMultiDimTempl; } }namespace ROOT { namespace Math { template <typename T> class IGradientFunctionMultiDimTempl; } }namespace ROOT { namespace Math { template <typename T> class IGradientMultiDimTempl; } }namespace ROOT { namespace Math { template <typename T> class IParametricFunctionMultiDimTempl; } }namespace ROOT { namespace Math { template <typename T> class IParametricGradFunctionMultiDimTempl; } }namespace ROOT { namespace Math { template <typename T> class ParamFunctorTempl; } }namespace ROOT { namespace Math { template <typename FunctionType> class BasicFitMethodFunction; } }namespace ROOT { namespace Math { template <unsigned int, typename _val_type> class TDataPoint; } }namespace ROOT { namespace Math { template <typename _val_type> class TDataPointN; } }namespace ROOT { namespace Math { template <int, int> class MixMaxEngine; } }namespace ROOT { namespace Math { class MersenneTwisterEngine; } }namespace ROOT { namespace Math { template <typename Engine> class Random; } }namespace ROOT { namespace Math { class LCGEngine; } }template <typename Engine> class TRandomGen;namespace ROOT { namespace Math { template <typename Generator> class StdEngine; } }namespace ROOT { namespace Fit {  } }namespace ROOT { namespace Fit { class UnBinData; } }namespace ROOT { namespace Fit { template <typename DerivFunType, typename ModelFunType, typename DataType> class BasicFCN; } }namespace ROOT { namespace Fit { class BinData; } }namespace ROOT { namespace Fit { template <typename DerivFunType, typename ModelFunType> class Chi2FCN; } }namespace ROOT { namespace Fit { template <typename DerivFunType, typename ModelFunType> class LogLikelihoodFCN; } }namespace ROOT { namespace Fit { template <typename DerivFunType, typename ModelFunType> class PoissonLikelihoodFCN; } }namespace ROOT { namespace Math { template <typename T> class Cartesian2D; } }namespace ROOT { namespace Math { template <typename T> class Polar2D; } }namespace ROOT { namespace Math { template <typename T> class Cartesian3D; } }namespace ROOT { namespace Math { template <typename T> class CylindricalEta3D; } }namespace ROOT { namespace Math { template <typename T> class Polar3D; } }namespace ROOT { namespace Math { template <typename T> class Cylindrical3D; } }namespace ROOT { namespace Math { class GlobalCoordinateSystemTag; } }namespace ROOT { namespace Math { template <typename CoordSystem, typename Tag> class DisplacementVector3D; } }namespace ROOT { namespace Math { class LocalCoordinateSystemTag; } }namespace ROOT { namespace Math { class DefaultCoordinateSystemTag; } }namespace ROOT { namespace Math { template <typename CoordSystem, typename Tag> class PositionVector3D; } }namespace ROOT { namespace Math { template <typename T> class PxPyPzE4D; } }namespace ROOT { namespace Math { template <typename T> class PxPyPzM4D; } }namespace ROOT { namespace Math { template <typename T> class PtEtaPhiE4D; } }namespace ROOT { namespace Math { template <typename T> class PtEtaPhiM4D; } }template <typename T> class _root_std_complex;namespace PyROOT {  }class TEveProjection;template <typename TT> class TEveVectorT;template <typename TT> class TEveVector4T;template <typename TT> class TEveVector2T;template <typename TT> class TEvePathMarkT;template <typename TT> class TEveRecTrackT;class TString;namespace ROOT {  }template <typename AParamType> class TParameter;namespace ROOT { namespace Detail {  } }namespace ROOT { namespace Math { template <unsigned int> class RowOffsets; } }namespace ROOT { namespace Internal {  } }namespace ROOT { namespace Internal { template <typename T> class TImpProxy; } }namespace ROOT { namespace Internal { template <typename T, int> class TArrayType; } }namespace ROOT { namespace Internal { template <typename T> class TArrayProxy; } }namespace ROOT { namespace Internal { template <typename T> class TClaImpProxy; } }namespace ROOT { namespace Internal { template <typename T> class TClaArrayProxy; } }namespace ROOT { namespace Internal { namespace TDF {  } } }namespace ROOT { namespace Detail { namespace TDF {  } } }namespace ROOT { namespace Experimental { namespace TDF {  } } }namespace ROOT { namespace Detail { namespace TDF { class TFilterBase; } } }namespace ROOT { namespace Detail { namespace TDF { class TCustomColumnBase; } } }namespace ROOT { namespace Experimental {  } }class TProofDrawListOfGraphs;class TProofDrawListOfPolyMarkers3D;namespace RooStats { namespace HistFactory {  } }class RooAbsCacheElement;template <typename T> class RooCacheManager;namespace ROOT { namespace Math { class IParametricGradFunctionOneDim; } }namespace ROOT { namespace Math { namespace Roots {  } } }namespace ROOT { namespace Math { class GSLQRngSobol; } }namespace ROOT { namespace Math { class GSLQRngNiederreiter2; } }namespace ROOT { namespace Math { class GSLRngMT; } }namespace ROOT { namespace Math { class GSLRngTaus; } }namespace ROOT { namespace Math { class GSLRngRanLux; } }namespace ROOT { namespace Math { class GSLRngGFSR4; } }namespace ROOT { namespace Math { class GSLRngRanLuxD2; } }namespace ROOT { namespace Math { class GSLRngRanLuxD1; } }namespace ROOT { namespace Math { class GSLRngRanLuxS2; } }namespace ROOT { namespace Math { class GSLRngRanLuxS1; } }template <typename T> class TNDArrayRef;template <typename T> class TNDArrayT;template <typename T> class THnT;class TArrayD;class TArrayF;class TArrayL;class TArrayI;class TArrayS;class TArrayC;namespace ROOT { namespace Math { template <typename T> class WrappedMultiTF1Templ; } }namespace ROOT { namespace v5 {  } }template <typename VO, typename VI> class RooCFunction1Ref;template <typename VO, typename VI> class RooCFunction1Binding;template <typename VO, typename VI> class RooCFunction1PdfBinding;template <typename VO, typename VI1, typename VI2> class RooCFunction2Ref;template <typename VO, typename VI1, typename VI2> class RooCFunction2Binding;template <typename VO, typename VI1, typename VI2> class RooCFunction2PdfBinding;template <typename VO, typename VI1, typename VI2, typename VI3> class RooCFunction3Ref;template <typename VO, typename VI1, typename VI2, typename VI3> class RooCFunction3Binding;template <typename VO, typename VI1, typename VI2, typename VI3> class RooCFunction3PdfBinding;template <typename VO, typename VI1, typename VI2, typename VI3, typename VI4> class RooCFunction4Ref;template <typename VO, typename VI1, typename VI2, typename VI3, typename VI4> class RooCFunction4Binding;template <typename VO, typename VI1, typename VI2, typename VI3, typename VI4> class RooCFunction4PdfBinding;namespace ROOT { namespace Math { template <typename CoordSystem, typename Tag> class DisplacementVector2D; } }namespace ROOT { namespace Math { template <typename CoordSystem, typename Tag> class PositionVector2D; } }namespace ROOT { namespace Math { template <typename CoordSystem> class LorentzVector; } }namespace ROOT { namespace Math { template <typename ScalarType> class PtEtaPhiM4D; } }namespace ROOT { namespace Math { template <typename ScalarType> class PxPyPzM4D; } }namespace ROOT { namespace Math { template <typename ScalarType> class PtEtaPhiE4D; } }namespace ROOT { namespace Math { namespace Impl {  } } }namespace ROOT { namespace Math { namespace Impl { template <typename T> class Plane3D; } } }namespace ROOT { namespace Math { namespace Impl { template <typename T> class Translation3D; } } }namespace ROOT { namespace Math { namespace Impl { template <typename T> class Transform3D; } } }namespace RooStats {  }namespace TStreamerInfoActions {  }namespace ROOT { namespace Minuit2 {  } }namespace Memstat {  }' were encountered.
[13'00'30]  WARN     DecayModes     : Branching ratios of 52 hadrons were renormalized by more than 1% to have sum 1.
###############################################################################

            :::s.
       ....  ''ss::                                                  ah:
     a::''.   ..:sss                                                .HH.
   mss'..     ...s'm.   sSA##As  mAhh##hsh##s.   .hA##ASa  sS###As  hMAh##h.
  :a':'.      .'':as   sM#'     .HHm''HMS''AMs  mMA' .AMs aMA.     'HHa..HM:
  .a:s'.    ..''ss     'h#H#S.  mMm  'M#' .HH. 'MH.  :MA  'h#H#S.  hMm  :M#
   .::ss'.  ....          'SMm .HH.  SMa  hMm  sM#..mHMs     'AMa 'MH.  SMa
      .s::'           #SMASHh  aMS  .MH:  HM:   #MMMmMM. #SMASHh  aMS  .MM.

###############################################################################
 This is SMASH version: SMASH-1.6
 Simulating Many Accelerated Strongly-interacting Hadrons

 Distributed under the GNU General Public License 3.0 (GPLv3 or later).
 See LICENSE for details.
 For the full list of contributors see AUTHORS.

 When using SMASH, please cite
      J. Weil et al., Phys.Rev. C94 (2016) no.5, 054905
 and in addition, if Pythia is used please cite
      T. Sjöstrand, S. Mrenna and P. Skands, JHEP05 (2006) 026,
              Comput. Phys. Comm. 178 (2008) 852.

 Webpage: https://smash-transport.github.io

 Report issues at https://github.com/smash-transport/smash
 or contact us by email at elfner@th.physik.uni-frankfurt.de

###############################################################################

[13'00'30]  INFO     Experiment     : End time: 100 fm/c
                                      -- Collider Modus:
                                      sqrt(S) (nucleus-nucleus) = 1516.9 GeV
                                      sqrt(S) (nucleon-nucleon) = 7.7 GeV
                                      Projectile:
                                        #particles   #testparticles   mass [GeV]   radius [fm]  diffusiveness [fm]
                                               197              197      184.786          6.38               0.535
                                      Target:
                                        #particles   #testparticles   mass [GeV]   radius [fm]  diffusiveness [fm]
                                               197              197      184.786          6.38               0.535
[13'00'31]  INFO     Experiment     : Adding output Particles of format Root
[13'00'31]  WARN       Output       : Creating Root output: There is no extended Root format.
[13'00'33]  INFO     Experiment     : Potentials are ON. Timestep is 0.01
[13'00'33]  INFO        Main        : Event 0
[13'00'33]  INFO     Experiment     : random number seed: 415159
[13'00'33]  INFO      Collider      : Impact parameter = 8.35498 fm
[13'00'33]  INFO      Collider      : Fermi motion is ON.
[13'00'33]  INFO     Experiment     : -------------------------------------------------------------------
[13'00'33]  INFO     Experiment     : Time [fm]   Ediff [GeV]    Scatt.|Decays   Particles         Timing
[13'00'33]  INFO     Experiment     : -------------------------------------------------------------------
[13'00'33]  INFO     Experiment     :    -2.062         0.000                0         394      3.179 [s]
[13'00'34]  INFO     Experiment     :     0.000        -0.183                0         394      4.649 [s]
 PYTHIA Error in MiniStringFragmentation::fragment: no 1- or 2-body state found above mass threshold  
 PYTHIA Error in Pythia::forceHadronLevel: hadronLevel failed; try again  
 PYTHIA Abort from Pythia::forceHadronLevel: hadronLevel failed; giving up  
[13'01'30] FATAL         Fpe        : Floating point trap was raised: Invalid (domain error occurred)
stack trace:
  /lib/x86_64-linux-gnu/libpthread.so.0 : ()+0xf890
  /lib/x86_64-linux-gnu/libm.so.6 : ()+0x15543
  /lib/x86_64-linux-gnu/libm.so.6 : pow()+0x1c
  /lustre/nyx/hades/user/parfenov/Soft/Models/SMASH/smash/build/smash : smash::Potentials::skyrme_force(double, smash::ThreeVector, smash::ThreeVector, smash::ThreeVector) const+0x36
  /lustre/nyx/hades/user/parfenov/Soft/Models/SMASH/smash/build/smash : smash::Potentials::all_forces(smash::ThreeVector const&, std::vector<smash::ParticleData, std::allocator<smash::ParticleData> > const&) const+0x244
  /lustre/nyx/hades/user/parfenov/Soft/Models/SMASH/smash/build/smash : smash::update_momenta(smash::Particles*, double, smash::Potentials const&, smash::RectangularLattice<std::pair<smash::ThreeVector, smash::ThreeVector> >*, smash::RectangularLattice<std::pair<smash::ThreeVector, smash::ThreeVector> >*)+0x5fb
  /lustre/nyx/hades/user/parfenov/Soft/Models/SMASH/smash/build/smash : smash::Experiment<smash::ColliderModus>::run_time_evolution()+0x396
  /lustre/nyx/hades/user/parfenov/Soft/Models/SMASH/smash/build/smash : smash::Experiment<smash::ColliderModus>::run()+0x191
  /lustre/nyx/hades/user/parfenov/Soft/Models/SMASH/smash/build/smash : main()+0x1952
  /lib/x86_64-linux-gnu/libc.so.6 : __libc_start_main()+0xf5
  /lustre/nyx/hades/user/parfenov/Soft/Models/SMASH/smash/build/smash() [0x44a997]
